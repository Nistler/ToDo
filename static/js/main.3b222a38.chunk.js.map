{"version":3,"sources":["Item.jsx","ToDo.jsx","index.js"],"names":["Item","this","props","task","changeStatus","onRemove","isActive","className","type","onClick","id","text","Component","ToDo","handleChange","e","value","target","setState","currentTask","addTask","preventDefault","state","tasks","length","newTasks","Math","random","toString","substr","localStorage","setItem","JSON","stringify","handleRemove","filtered","filter","handleStatus","mapped","map","getItem","parse","activeTasks","el","key","finishedTasks","onSubmit","maxLength","required","placeholder","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b222a38.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Item extends Component {\n  render() {\n    const { task, changeStatus, onRemove, isActive } = this.props;\n\n    return (\n      <div className=\"sticker\">\n        <div className=\"sticker-content\">\n          <button\n            type=\"button\"\n            className=\"buttons\"\n            onClick={changeStatus(task.id)}\n          >\n            {isActive ? (\n              <i className=\"fas fa-check icons\"></i>\n            ) : (\n              <i className=\"fas fa-undo icons\"></i>\n            )}\n          </button>\n          <div className=\"taskText\">\n            {isActive ? task.text : <s>{task.text}</s>}\n          </div>\n          <button type=\"button\" className=\"buttons\" onClick={onRemove(task.id)}>\n            <i className=\"fas fa-times icons\"></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Item from \"./Item.jsx\";\n\nconst generateID = () => Math.random().toString(36).substr(2, 9);\n\nexport default class ToDo extends Component {\n  constructor(props) {\n    super(props);\n    const tasks = localStorage.getItem(\"tasks\")\n      ? JSON.parse(localStorage.getItem(\"tasks\"))\n      : [];\n    this.state = { tasks, currentTask: \"\" };\n  }\n\n  // Контроль поля ввода\n  handleChange = (e) => {\n    const { value } = e.target;\n    this.setState({ currentTask: value });\n  };\n\n  // Обработчик добавления новой задачи\n  addTask = (e) => {\n    e.preventDefault();\n    const { tasks, currentTask } = this.state;\n    if (currentTask.length === 0) {\n      return;\n    }\n    const newTasks = [\n      { id: generateID(), text: currentTask, isActive: true },\n      ...tasks,\n    ];\n    this.setState({\n      tasks: newTasks,\n      currentTask: \"\",\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\n  };\n\n  // Удаление задачи\n  handleRemove = (id) => (e) => {\n    e.preventDefault();\n    const { tasks } = this.state;\n    const filtered = tasks.filter((task) => task.id !== id);\n    this.setState({ tasks: filtered });\n    localStorage.setItem(\"tasks\", JSON.stringify(filtered));\n  };\n\n  // Переключение статуса задачи (активная / завершенная)\n  handleStatus = (id) => (e) => {\n    e.preventDefault();\n    const { tasks } = this.state;\n    const mapped = tasks.map((task) =>\n      task.id === id ? { ...task, isActive: !task.isActive } : task\n    );\n    this.setState({ tasks: mapped });\n    localStorage.setItem(\"tasks\", JSON.stringify(mapped));\n  };\n\n  render() {\n    const { tasks, currentTask } = this.state;\n\n    // Подготовка списков активных и завершенных задачь\n    const activeTasks = tasks\n      .filter((el) => el.isActive)\n      .map((el) => (\n        <Item\n          key={el.id}\n          task={el}\n          changeStatus={this.handleStatus}\n          onRemove={this.handleRemove}\n          isActive={el.isActive}\n        />\n      ));\n    const finishedTasks = tasks\n      .filter((el) => !el.isActive)\n      .map((el) => (\n        <Item\n          key={el.id}\n          task={el}\n          changeStatus={this.handleStatus}\n          onRemove={this.handleRemove}\n          isActive={el.isActive}\n        />\n      ));\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"inputSticker\">\n            <div className=\"sticker\">\n              <div className=\"sticker-content\">\n                <form className=\"form\" onSubmit={this.addTask}>\n                  <input\n                    type=\"text\"\n                    maxLength=\"30\"\n                    value={currentTask}\n                    required\n                    className=\"input\"\n                    placeholder=\"I am going...\"\n                    onChange={this.handleChange}\n                  />\n                  <button type=\"submit\" className=\"buttons\">\n                    <i className=\"fas fa-pencil-alt icons\"></i>\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n          <div className=\"tasksContainer\">\n            <div className=\"tasksBlock\">\n              <div className=\"text\">Active tasks: {activeTasks.length}</div>\n              {activeTasks}\n            </div>\n            <div className=\"tasksBlock\">\n              <div className=\"text\">Done: {finishedTasks.length}</div>\n              <div className=\"finished\">{finishedTasks}</div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport ToDo from \"./ToDo.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToDo />\n  </React.StrictMode>,\n  document.getElementById(\"tasksContent\")\n);\n"],"sourceRoot":""}